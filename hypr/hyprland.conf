input {
	kb_layout = fr
	kb_options = 
	kb_rules = 
	kb_model =
}

bind=SUPER, RETURN, exec, uwsm app -- kitty
bind=SUPER,Q,killactive 

#Fix some dragging issues with XWayland
windowrulev2 = nofocus,class:^$,title^$,xwayland:1,floating:1,fullscreen:0,pinned:0

#Monitors
monitor=DP-1, 1920x1080@144, 0x0, 1
monitor=HDMI-A-1, 1920x1080@60,-1080x-500, 1, transform,3


#firefox avec wayland
#exec-once= env MOZ_ENABLE_WAYLAND=1 firefox

############Comming from default config file ######################

$mainMod = SUPER

# Move focus with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d

# Workspaces
bind = SUPER, code:10, workspace, 1
bind = SUPER, code:11, workspace, 2
bind = SUPER, code:12, workspace, 3
bind = SUPER, code:13, workspace, 4
bind = SUPER, code:14, workspace, 5
bind = SUPER, code:15, workspace, 6
bind = SUPER, code:16, workspace, 7
bind = SUPER, code:17, workspace, 8
bind = SUPER, code:18, workspace, 9
bind = SUPER, code:19, workspace, 10

# Send to Workspaces
bind = SUPER_SHIFT, code:10, movetoworkspace, 1
bind = SUPER_SHIFT, code:11, movetoworkspace, 2
bind = SUPER_SHIFT, code:12, movetoworkspace, 3
bind = SUPER_SHIFT, code:13, movetoworkspace, 4
bind = SUPER_SHIFT, code:14, movetoworkspace, 5
bind = SUPER_SHIFT, code:15, movetoworkspace, 6
bind = SUPER_SHIFT, code:16, movetoworkspace, 7
bind = SUPER_SHIFT, code:17, movetoworkspace, 8
bind = SUPER_SHIFT, code:18, movetoworkspace, 9
bind = SUPER_SHIFT, code:19, movetoworkspace, 10

# Example special workspace (scratchpad)
bind = $mainMod, S, togglespecialworkspace, magic
bind = $mainMod SHIFT, S, movetoworkspace, special:magic

#Mouse bindings
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resize
bind = $mainMod SHIFT, Q, exec, hyprctl activewindow | grep pid | tr -d 'pid:' | xargs kill # Quit active window and all open instances

bind = $mainMod SHIFT, right, resizeactive, 100 0                                           # Increase window width with keyboard
bind = $mainMod SHIFT, left, resizeactive, -100 0                                           # Reduce window width with keyboard
bind = $mainMod SHIFT, down, resizeactive, 0 100                                            # Increase window height with keyboard
bind = $mainMod SHIFT, up, resizeactive, 0 -100                                             # Reduce window height with keyboard
bind = $mainMod, G, togglegroup                                                             # Toggle window group
bind = $mainMod, K, swapsplit                                                               # Swapsplit
bind = $mainMod, mouse_down, workspace, e+1  # Open next workspace
bind = $mainMod, mouse_up, workspace, e-1    # Open previous workspace
bind = $mainMod, F, fullscreen, 0                                                           # Set active window to fullscreen
bind = $mainMod, M, fullscreen, 1                                                           # Maximize Window
bind = $mainMod, T, togglefloating                                                          # Toggle active windows into floating mode
bind = $mainMod SHIFT, T, workspaceopt, allfloat                                            # Toggle all windows into floating mode
bind = $mainMod, J, togglesplit                                                             # Toggle split
bind = $mainMod, E, exec, kitty env EDITOR=nvim spf
#########################################################

#tofi
bind=SUPER,SPACE,exec, uwsm app -- sh -c "tofi-drun --font /usr/share/fonts/noto/NotoSansMono-Black.ttf | /home/lounis/.config/tofi/launcher.sh"

#project launcher 
bind=SUPER, P, exec, uwsm app -- sh -c "cat ~/.config/tofi/project-list | tofi --font /usr/share/fonts/noto/NotoSansMono-Black.ttf --prompt='Projects :' | /home/lounis/.config/tofi/project-launcher.sh"

#animations
animation = windows, 1, 5, default, popin 80%

#reduire les espacements
general {
  gaps_in = 2
  gaps_out = 2
  border_size = 1 
}
decoration {
  rounding = 10
  rounding_power = 1.5
}
input {
  force_no_accel = true
}

#config du clipboard

# Copier (wl-copy) et enregistrer dans Cliphist
bind=SUPER, C, exec, uwsm app -- wl-copy < /dev/stdin && cliphist store

# Afficher l'historique du presse-papiers
bind=SUPER, V, exec, uwsm app -- cliphist list | tofi --prompt='Clip :' | cliphist decode | wl-copy
#bind alttab
bind=Alt_L, TAB, workspace, e+1

#sound control
# Example volume button that allows press and hold, volume limited to 150%
binde = , XF86AudioRaiseVolume, exec, wpctl set-volume -l 1.5 @DEFAULT_AUDIO_SINK@ 1%+

# Example volume button that will activate even while an input inhibitor is active
bindl = , XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 1%-

# volume mute
bind = , XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle #next song
bind = , XF86AudioNext, exec, playerctl next
#previous song
bind = , XF86AudioPrev, exec, playerctl previous
#play/pause
bind = , XF86AudioPlay, exec, playerctl play-pause
